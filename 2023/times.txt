# general
; TIP. go `strings.Replacer`
; TIP. go use //embed
; TIP. if semantics prefer starting from 1, use 1 instead of 0

---

contains SPOILERS















---

#10; 19:05  - 23:14     -                       ; part 2 not finished. it's fun though
                                                ; TIP. when input resolution is not working, try get some visualization from the output
                                                ; TIP. always see if you can get the number from your output data. sometimes it jus takes removing some extra data manually...

#9; 17:00   - ? - 18:06                         ; easy recursion
                                                ; TIP. what comes next == newtons calculus https://www.youtube.com/watch?v=4AuV93LOPcE
                                                ; TIP. when doing sequence to go forward, you can invert input to get backward

#8; 20:00   - 20:44       - 22:10     ;2h 10m   ; part1 easy, part2 went for a full computation but that was not ending... got to reddit and learnt it was lcm.
                                                ; TIP. if something takes more than 20' but everything seems ok on code, assume there must be some hidden trick on the puzzle.
                                                ; TIP. lcm/gdm is used when there is a cycle. if there is no cycle, just multiply the numbers
                                                ;  - the paths form a loop
                                                ;  - the loop will only have 1 node ending at Z
                                                ;  - the distance from the node to Z is the same as the distance from Z to the next Z

#7; 20:09    - @_@ ++                ; 6h        ; passing samples and curated inputs from reddit, but not reaching input
                                                ; narrowed it down to the GetHandType algorithm being wrong/too complex and had no energy to do another one.
                                                ; had to ditch mine (FailedHandType) and use borrowed code to unlock it (Borrowed_GetHandType)
                                                ; TIP. when having tons of edge-cases is better to go simple

#6; 19:43   - 20:30     - 20:34     ; 1h ish    ; that simple? ¯\_(ツ)_/¯
                                                ; TIP. on simple input files, don´t bother parsing them just use them on the tests
                                                ; LEARN. some algebra, here quadratics; x = -b +- sqrt(b^2 - 4ac) / 2a

#5; 21:48   - 23:14     - 00:30     ; 2h 42m    ; very fun!
                                                ; did a +1 and worked. it was pure luck...
                                                ; part 2 takes 13 minutes. could be done better
                                                ; TIP. assert all specs
                                                ; LEARN. goroutines, closures, channels
                                                        https://go.dev/doc/faq#closures_and_goroutines
                                                        https://stackoverflow.com/questions/58533613/sync-waitgroup-and-nested-loops

#4; 17:10?  - 17:52  -  21:16       ; 4h 6m     ; not difficult, just me having an extra row on the input and not validating it
                                                ; TIP. always evaluate if the order of the input reading is enough  >> to avoid recursion
                                                ; TIP. watch-out inputs... always validate everything

#3; 17:27   - 18:56   - 21:17       ; 4h        ; ok... this was a nightmare. the specs were quite shallow and my approach did not help either :(
                                                ; TIP. always evaluate if the order of the input reading is enough >> to avoid complexity

#2; 16:10   - 17:13   - 17:36       ; 1h 26m
#1; 19:45   - 20:50                 ; 1h 5m